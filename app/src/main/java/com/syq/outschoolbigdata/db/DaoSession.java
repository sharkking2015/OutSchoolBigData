package com.syq.outschoolbigdata.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.syq.outschoolbigdata.vo.orm.LocalExamInfo;
import com.syq.outschoolbigdata.vo.orm.LocalQuestionInfo;
import com.syq.outschoolbigdata.vo.orm.TiInfo;
import com.syq.outschoolbigdata.vo.orm.TimeTags;
import com.syq.outschoolbigdata.vo.orm.UserBean;

import com.syq.outschoolbigdata.db.LocalExamInfoDao;
import com.syq.outschoolbigdata.db.LocalQuestionInfoDao;
import com.syq.outschoolbigdata.db.TiInfoDao;
import com.syq.outschoolbigdata.db.TimeTagsDao;
import com.syq.outschoolbigdata.db.UserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig localExamInfoDaoConfig;
    private final DaoConfig localQuestionInfoDaoConfig;
    private final DaoConfig tiInfoDaoConfig;
    private final DaoConfig timeTagsDaoConfig;
    private final DaoConfig userBeanDaoConfig;

    private final LocalExamInfoDao localExamInfoDao;
    private final LocalQuestionInfoDao localQuestionInfoDao;
    private final TiInfoDao tiInfoDao;
    private final TimeTagsDao timeTagsDao;
    private final UserBeanDao userBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        localExamInfoDaoConfig = daoConfigMap.get(LocalExamInfoDao.class).clone();
        localExamInfoDaoConfig.initIdentityScope(type);

        localQuestionInfoDaoConfig = daoConfigMap.get(LocalQuestionInfoDao.class).clone();
        localQuestionInfoDaoConfig.initIdentityScope(type);

        tiInfoDaoConfig = daoConfigMap.get(TiInfoDao.class).clone();
        tiInfoDaoConfig.initIdentityScope(type);

        timeTagsDaoConfig = daoConfigMap.get(TimeTagsDao.class).clone();
        timeTagsDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        localExamInfoDao = new LocalExamInfoDao(localExamInfoDaoConfig, this);
        localQuestionInfoDao = new LocalQuestionInfoDao(localQuestionInfoDaoConfig, this);
        tiInfoDao = new TiInfoDao(tiInfoDaoConfig, this);
        timeTagsDao = new TimeTagsDao(timeTagsDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);

        registerDao(LocalExamInfo.class, localExamInfoDao);
        registerDao(LocalQuestionInfo.class, localQuestionInfoDao);
        registerDao(TiInfo.class, tiInfoDao);
        registerDao(TimeTags.class, timeTagsDao);
        registerDao(UserBean.class, userBeanDao);
    }
    
    public void clear() {
        localExamInfoDaoConfig.getIdentityScope().clear();
        localQuestionInfoDaoConfig.getIdentityScope().clear();
        tiInfoDaoConfig.getIdentityScope().clear();
        timeTagsDaoConfig.getIdentityScope().clear();
        userBeanDaoConfig.getIdentityScope().clear();
    }

    public LocalExamInfoDao getLocalExamInfoDao() {
        return localExamInfoDao;
    }

    public LocalQuestionInfoDao getLocalQuestionInfoDao() {
        return localQuestionInfoDao;
    }

    public TiInfoDao getTiInfoDao() {
        return tiInfoDao;
    }

    public TimeTagsDao getTimeTagsDao() {
        return timeTagsDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

}
